<?php

namespace Tests\Feature;

use App\Http\Controllers\Api\v1\CartController;
use App\Models\Cart;
use App\Models\Category;
use App\Models\Panel;
use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseTransactions;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CartTest extends TestCase
{
    use DatabaseTransactions;

    public $user , $category , $panel;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::factory()->create();
        $this->panel = Panel::factory()->create();
        $this->category = Category::factory()->create();
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_panel_can_buy_cart()
    {
        $base_id = mt_rand(1000000,1000000000);
        $salt = config('site.salt');
        $carts = Cart::factory()->count(10)->create(['category_id'=>$this->category->id]);
        $code = base64_encode(md5($salt.$this->category->id.$salt).'-'.$this->category->id.'-'.$base_id.'-'.$this->panel->id);
        $this->actingAs($this->user)
            ->postJson(action(CartController::class),[
                'username' => $this->panel->username,
                'phone' => $this->panel->phone,
                'category_id' => $this->category->id,
                'base_id' => $base_id,
                'code' => $code,
            ])->assertStatus(200);
    }
}
